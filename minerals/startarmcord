#!/usr/bin/env bash

# Set FEATURES to what goes after --enable-features; for example, UseSkiaRenderer,WebRTCPipeWireCapturer,etc,etc will then get turned into --enable-features=UseSkiaRenderer,WebRTCPipeWireCapturer,etc,etc.
FEATURES="UseSkiaRenderer"
TMPDIR="$XDG_RUNTIME_DIR/app/${FLATPAK_ID:-xyz.armcord.ArmCord}"
declare -a FLAGS=(--enable-gpu-rasterization --enable-zero-copy --enable-gpu-compositing --enable-native-gpu-memory-buffers --enable-oop-rasterization)

if [[ $XDG_SESSION_TYPE == "wayland" ]]
then
    echo "Using Wayland, enabling PipeWire for video capture"
    FEATURES="${FEATURES},WebRTCPipeWireCapturer"
fi

WAYLAND_SOCKET=${WAYLAND_DISPLAY:-"wayland-0"}
if [[ $XDG_SESSION_TYPE == "wayland" ]] && [[ -e "$XDG_RUNTIME_DIR/${WAYLAND_SOCKET}" ]]
then
    echo "Wayland is not accessible, running through Xwayland"
    FLAGS+=(--ozone-platform=wayland)
    FEATURES="$FEATURES,UseOzonePlatform,WaylandWindowDecorations"
fi

# Just your normal NVIDIA things
if [[ $XDG_SESSION_TYPE == "wayland" ]] && [[ -c /dev/nvidia0 ]]; then
    echo "Using NVIDIA on Wayland, applying workaround"
    FLAGS+=(--disable-gpu-sandbox)
fi

FLAGS+=(--enable-features="${FEATURES}")
echo "Passing the following arguments to Electron:" "${FLAGS[@]}"
zypak-wrapper /app/bin/armcord/armcord "${FLAGS[@]}" "$@"
